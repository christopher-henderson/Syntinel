package main

import (
	"fmt"
	"net/http"
	"strings"
	"time"
)

func executeJob(j job) {

	// Generated by curl-to-Go: https://mholt.github.io/curl-to-go

	body := strings.NewReader(`{"id": 1, "dockerfile": "FROM docker.io/centosnnMAINTAINER Christopher HendersonnnRUN yum install -y go git wgetnCOPY script.sh $HOME/script.shnCMD chmod +x script.sh && ./script.shn", "environmentVariables": "a=b", "script": "#!/usr/bin/env bashngit clone https://github.com/christopher-henderson/TestTheTester.git && cd TestTheTester/GoBeInGoodHands && go test . -v -covern", "testID": 1}`)
	req, err := http.NewRequest("POST", "http://localhost:9093/test/run", body)
	if err != nil {
		// handle err
	}
	req.Header.Set("Content-Type", "application/json")

	resp, err := http.DefaultClient.Do(req)
	if err != nil {
		// handle err
	}
	defer resp.Body.Close()
}

func scheduleJob(j job) {
	fmt.Println("scheduling job")
	time.Sleep(time.Duration(j.Interval) * time.Second)
	tmp := jobMap.Get(j.Id)

	if tmp.Canceled == false {
		go scheduleJob(j)
		go executeJob(j)
	} else {
		jobMap.Delete(j.Id)
	}
}
